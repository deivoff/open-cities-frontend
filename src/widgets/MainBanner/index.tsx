import React, { useState, useEffect } from 'react';
import css from './MainBanner.module.sass';
import { getRandomInt, getRandomNormal } from '$utils/index';

export type Dot = {
  duration: number;
};

interface DotProperties {
  x: string;
  y: string;
  radius: number;
}

const getRandomCircle = (): DotProperties => {
  const randomIntOrNormal = Math.random() > 0.33;
  return {
    x: `${randomIntOrNormal ? getRandomInt(0, 100) : getRandomNormal(10, 80)}%`,
    y: `${randomIntOrNormal ? getRandomInt(0, 100) : getRandomNormal(35, 90)}%`,
    radius: getRandomInt(5, 14),
  };
};

const DotCreate: React.FC<Dot> = ({ duration }) => {
  const [{ x, y, radius }, setCircle] = useState(getRandomCircle());

  useEffect(() => {
    const interval = setInterval(() => {
      setCircle(getRandomCircle());
    }, duration * 1000);
    return () => clearInterval(interval);
  }, [duration]);

  return (
    <circle className="innerCircle" cx={x} cy={y} r="0" fill="#38CDBE" stroke="#38CDBE" strokeWidth="3">
      <animate
        attributeType="SVG"
        attributeName="r"
        begin="0s"
        dur={`${duration}s`}
        repeatCount="indefinite"
        from="0"
        to={radius}
      />
      <animate
        attributeType="CSS"
        attributeName="stroke-width"
        begin="0s"
        dur={`${duration}s`}
        repeatCount="indefinite"
        from="3"
        to="1"
      />
      <animate
        attributeType="CSS"
        attributeName="opacity"
        begin="0s"
        dur={`${duration}s`}
        repeatCount="indefinite"
        from="1"
        to="0"
      />
    </circle>
  );
};

interface BannerProps {
  dots: Dot[];
}

const SVG_WIDTH = 926;
const SVG_HEIGHT = 620;

const MASK_WIDTH = 2000;
const MASK_HEIGHT = 1000;

export const Banner: React.FC<BannerProps> = ({ dots }) => (
  <section className={css.banner}>
    <div className={css.description}>
      <h1 className={css.title}>Сервис геоаналитики по&nbsp;открытым данным</h1>
      <p className={css.text}>
        Более подробное описательное предложение о роде и виде занятий для этого.
        И ниже призыв присоединиться к системе, все по шаблону
      </p>
    </div>
    <div className={css.decorative}>
      <svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 928 622" width={SVG_WIDTH} height={SVG_HEIGHT}>
        <defs>
          <radialGradient id="gradient" gradientUnits="userSpaceOnUse">
            <stop offset="0%" stop-color="#fff"/>
            <stop offset="100%" stop-color="rgba(0,0,0,0)" />
          </radialGradient>
          <mask id="mask">
            <rect width={MASK_WIDTH} height={MASK_HEIGHT} fill="url(#gradient)" />
          </mask>
        </defs>
        <g
          fill="none"
          stroke="rgba(238, 238, 238, 0.5)"
          strokeLinecap="square"
          strokeMiterlimit="3"
          clipPath="url(#a)"
          mask="url(#mask)"
        >
            <path d="M475.722 218.06l-15.779 8.125-4.509 9.931 M507.73 470.394l13.976-22.571-73.034-52.362-40.124-17.153-10.369-51.46-35.615-13.542-45.985-9.028-34.713 4.514 M400.433 403.135l42.611-61.078c.145-.208.306-.405.481-.589l36.488-38.274c.727-.763 1.195-1.736 1.336-2.78l7.32-54.158c.332-2.455-1.184-4.782-3.563-5.472l-8.572-2.484c-2.498-.724-4.023-3.242-3.509-5.791l7.297-36.168c.471-2.333 2.521-4.011 4.901-4.011h6.962c1.558 0 3.026.726 3.972 1.963l19.089 24.964c.946 1.237 2.414 1.963 3.972 1.963h18.658c1.72 0 3.32.884 4.235 2.341l8.186 13.041c.174.277.375.537.6.775l15.441 16.344 M461.489 441.052l41.738-59.845c1.171-1.679 1.798-3.675 1.798-5.721v-9.296c0-2.744-1.127-5.367-3.118-7.256l-64.526-61.207c-.681-.645-1.448-1.191-2.281-1.623l-12.289-6.37c-1.422-.737-3.001-1.122-4.602-1.122h-.858c-5.041 0-9.294-3.752-9.922-8.754l-2.807-22.348c-.369-2.937.582-5.885 2.596-8.053l23.303-25.078 M431.991 423.448l40.575-59.585 22.09-19.862-55.001-52.814m-20.287-54.168l6.837 19.016c.717 1.995 2.866 3.084 4.899 2.482l16.215-4.797m156.888 37.016l-48.238 4.965-14.427 6.771H491.05l-9.017-6.771 M554.166 296.604l9.016 21.216v59.133l-18.033 23.022-29.304-23.022h-9.016m-51.395-69.967l-50.492 50.106m159.142 17.153l8.565 6.32h29.304m-314.227-180.11l15.328 18.959h9.017l17.131 27.084 15.779 12.188 20.739 32.049 36.967 34.758m-77.091-19.861l28.853 40.175 30.656 14.896 19.837-4.514m-21.189-49.203l24.795-25.73m-16.68 36.564l28.852-28.89m-10.819 99.76l45.533 30.244 16.681-20.313h18.033 M429.737 225.282l7.213-8.125M494.5 302l-4.038 6.729c-.305.51-.7.961-1.164 1.332L467.5 327.5M338 155l-13.959-25.511c-.356-.651-.853-1.215-1.454-1.65l-12.874-9.323c-.472-.341-.999-.598-1.559-.758l-11.803-3.372c-.884-.252-1.68-.743-2.303-1.419l-57.42-62.2856c-.415-.4504-.91-.8207-1.459-1.0924L140 2.5m25.5 219l3.5-4 48 19.5h8.5l19 6.5 34 14.5m143-64.5L415 212v9l18.5 5m27 .5l-10-15m15 11l-9-16m3 21l-19-8m-18 13.5l26.5 10.5M429 259v-9.078c0-.929.259-1.841.749-2.631L435.5 238m81 140l-3.224-6.741c-1.424-2.978-1.287-6.467.367-9.325l.909-1.57c1.253-2.164 1.65-4.718 1.112-7.16L504.5 302.5m-131-5.5l13-14M522 448l8.5 7 9.5-15.5-27.5-19V417L491 399m-60.5-39l54 38.5m-38-28l-13 18.5m-76-12l19.242-47.87c.669-1.666 2.643-2.374 4.22-1.514L389 332m0 27.5l5 21.5 14-4"/>
            <path strokeWidth="2" d="M563 1l-7.21 75.9469c-.192 2.0236-.692 4.006-1.481 5.879L524.75 152.943c-1.402 3.325-3.677 6.209-6.585 8.346l-80.313 59.028v0c-3.81 2.48-3.266 8.218.942 9.938l5.624 2.298c3.807 1.556 6.033 5.539 5.363 9.597l-6.756 40.926c-.723 4.38-2.883 8.394-6.139 11.412l-35.24 32.658c-1.359 1.259-3.144 1.959-4.996 1.959h-3.635c-3.061 0-5.271 2.928-4.431 5.871v0c1.094 3.833-2.865 7.152-6.448 5.407l-4.541-2.212c-1.813-.883-3.923-.924-5.769-.112l-38.115 16.776-28.747 15.895c-.971.537-1.984.992-3.031 1.36l-79.126 27.885-156.8812 36.934c-1.5021.354-3.04.532-4.5832.532H4.60669 M927 234.762l-94.424 44.646c-1.957.925-4.051 1.526-6.2 1.781l-51.194 6.054c-1.868.221-3.758.177-5.614-.13l-315.46-52.198c-.617-.102-1.225-.257-1.817-.462l-14.643-5.087c-2.675-.929-3.116-4.526-.745-6.074v0c2.107-1.376 2.048-4.481-.108-5.777l-9.162-5.504c-2.657-1.596-4.434-4.323-4.822-7.397l-3.326-26.332c-.653-5.175-3.302-9.889-7.382-13.139l-12.275-9.777c-.798-.635-1.545-1.33-2.237-2.079L257.5 1.5M1 131.842l42.4064 4.044c3.2381.309 6.352 1.403 9.0718 3.187l35.0807 23.013 46.5281 38.467c1.729 1.429 3.686 2.557 5.79 3.338l5.629 2.087c2.226.826 4.287 2.041 6.087 3.589l67.608 58.147 11.754 8.982c3.488 2.665 7.755 4.109 12.144 4.109h36.963l49.301 5.217c4.007.424 8.049-.372 11.596-2.285l17.003-9.167c7.591-4.092 16.951-2.858 23.222 3.063l90.822 85.753c.972.917 2.033 1.735 3.168 2.441l57.803 35.953 65.308 48.826c1.536 1.148 2.899 2.512 4.047 4.048l41.097 55.011 31.523 51.792c1.026 1.686 1.797 3.515 2.288 5.427L691 620.5 M359 620.5v-25.872c0-1.854.258-3.698.766-5.481l22.105-77.574c.508-1.783.765-3.628.765-5.481V387.513L389 337.5 M575 621.5l-21.294-111.665c-.587-3.079-1.89-5.977-3.803-8.46l-9.262-12.023"/>
            <path strokeWidth="3" d="M414.592 109.083c-3.506 8.574-7.508 18.21-11.137 26.654-6.227 14.489-19.477 20.376-34.888 17.027-20.788-4.518-42.338 3.167-55.576 19.821l-17.772 22.356c-8.702 10.948-13.926 24.252-14.997 38.196l-3.809 49.584c-.838 10.906 2.723 21.693 9.89 29.955 2.44 2.814 4.485 5.948 6.078 9.315l1.313 2.775c5.508 11.643 14.436 21.329 25.592 27.767l9.466 5.461 202.916 127.723c9.013 5.672 20.228 6.583 30.038 2.439 8.41-3.552 14.944-10.47 18.011-19.069l4.893-13.717c2.527-7.085 3.819-14.551 3.819-22.074v-8.943c0-9.823 2.067-19.535 6.066-28.506l5.204-11.671 11.642-18.651c6.74-10.798 7.179-24.379 1.151-35.59-1.903-3.537-3.191-7.372-3.809-11.34l-7.042-45.192c-1.272-8.163-.378-16.518 2.594-24.227 3.502-9.085 4.107-19.032 1.73-28.475l-7.583-30.134c-2.102-8.352-6.016-16.139-11.465-22.808-7.81-9.557-18.434-16.408-30.361-19.578l-20.349-5.409c-8.099-2.153-15.745-5.743-22.575-10.599l-34.755-24.707-22.098-12.8569c-7.173-4.1735-15.774-5.1265-23.687-2.6245-8.403 2.6569-15.165 8.9414-18.5 17.0984z"/>
        </g>
        <g mask="url(#mask)">
          {dots.map(({ duration }, i) => (
            <DotCreate key={`dot_${i}`} duration={duration} />
          ))}
        </g>
        
      </svg>
    </div>
  </section>
);
